State 0:
          start ::= * global_decls fp_decls block TK_EOF
          global_decls ::= * global_decls primitive id_list one_more_eol
          global_decls ::= * global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
          global_decls ::= * global_decls typedef one_more_eol
      (4) global_decls ::= *

                  global_decls shift        31     
                         start accept
                     {default} reduce       4      global_decls ::=

State 1:
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          if_statement ::= KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list * else_statement KW_FIN KW_SI
          else_statement ::= * KW_SINO TK_NEW_LINE statement_list
     (46) else_statement ::= *
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_SINO shift        121    
                       KW_PARA shift        35     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                else_statement shift        123    
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement
                     {default} reduce       46     else_statement ::=

State 2:
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          do_while_until_statement ::= KW_REPITA one_more_eol statement_list * KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_PARA shift        35     
                      KW_HASTA shift        12     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement

State 3:
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          while_statement ::= KW_MIENTRAS expr KW_HAGA one_more_eol statement_list * KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                        KW_FIN shift        118    
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_PARA shift        35     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement

State 4:
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          for_statement ::= KW_PARA assignment KW_HASTA expr KW_HAGA statement_list * KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                        KW_FIN shift        119    
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_PARA shift        35     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement

State 5:
          block ::= KW_INICIO opt_eol statement_list * KW_FIN opt_eol
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                        KW_FIN shift        73     
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_PARA shift        35     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement

State 6:
          statement_list ::= statement_list * statement one_more_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * while_statement
          statement ::= * do_while_until_statement
          statement ::= * function_call
          statement ::= * languageStatements
          statement ::= * assignment
          statement ::= * return_statement
          languageStatements ::= * printStatement
          printStatement ::= * KW_ESCRIBA expr_list
          if_statement ::= * KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
     (45) else_statement ::= KW_SINO TK_NEW_LINE statement_list *
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          while_statement ::= * KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          do_while_until_statement ::= * KW_REPITA one_more_eol statement_list KW_HASTA expr
          function_call ::= * KW_LLAMAR TK_ID opt_params
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        116    
                    KW_ESCRIBA shift        8      
                         KW_SI shift        15     
                       KW_PARA shift        35     
                   KW_MIENTRAS shift        13     
                     KW_REPITA shift        42     
                     KW_LLAMAR shift        117    
                    KW_RETORNE shift        10     
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        44     
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 38     statement ::= function_call
                    assignment shift-reduce 40     statement ::= assignment
              return_statement shift-reduce 41     statement ::= return_statement
                      left_val shift        115    
            languageStatements shift-reduce 39     statement ::= languageStatements
                printStatement shift-reduce 42     languageStatements ::= printStatement
      do_while_until_statement shift-reduce 37     statement ::= do_while_until_statement
               while_statement shift-reduce 36     statement ::= while_statement
                     {default} reduce       45     else_statement ::= KW_SINO TK_NEW_LINE statement_list

State 7:
          opt_params ::= TK_OPEN_PAR * expr_list TK_CLOSE_PAR
          expr_list ::= * expr exprs
          expr_list ::= * TK_STR_LIT exprs
     (55) expr_list ::= *
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                    TK_STR_LIT shift        72     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        47     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final
                     expr_list shift        127    
                     {default} reduce       55     expr_list ::=

State 8:
          printStatement ::= KW_ESCRIBA * expr_list
          expr_list ::= * expr exprs
          expr_list ::= * TK_STR_LIT exprs
     (55) expr_list ::= *
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                    TK_STR_LIT shift        72     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        47     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final
                     expr_list shift-reduce 43     printStatement ::= KW_ESCRIBA expr_list
                     {default} reduce       55     expr_list ::=

State 9:
          exprs ::= exprs TK_COMMA * expr
          exprs ::= exprs TK_COMMA * TK_STR_LIT
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                    TK_STR_LIT shift-reduce 57     exprs ::= exprs TK_COMMA TK_STR_LIT
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        87     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 10:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          return_statement ::= KW_RETORNE * expr
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        80     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 11:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          assignment ::= left_val TK_ARROW * expr
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        81     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 12:
          do_while_until_statement ::= KW_REPITA one_more_eol statement_list KW_HASTA * expr
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        82     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 13:
          while_statement ::= KW_MIENTRAS * expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        76     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 14:
          for_statement ::= KW_PARA assignment KW_HASTA * expr KW_HAGA statement_list KW_FIN KW_PARA
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        77     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 15:
          if_statement ::= KW_SI * expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        46     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 16:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR
          final ::= TK_OPEN_PAR * expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        78     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 17:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          left_val ::= TK_ID TK_OPEN_BRACK * expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                          expr shift        79     
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        89     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 18:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_IGUAL_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        90     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 19:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MENOR_Q_IG * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        91     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 20:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MAYOR_Q_IG * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        92     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 21:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MAYOR_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        93     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 22:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MENOR_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term0 shift        88     
                         term1 shift        83     
                         final shift-reduce 84     term1 ::= final

State 23:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_O * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term1 shift        84     
                         final shift-reduce 84     term1 ::= final

State 24:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_RESTA * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term1 shift        85     
                         final shift-reduce 84     term1 ::= final

State 25:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_SUMA * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         term1 shift        86     
                         final shift-reduce 84     term1 ::= final

State 26:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_MOD * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         final shift-reduce 83     term1 ::= term1 TK_MOD final

State 27:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_Y * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         final shift-reduce 82     term1 ::= term1 TK_Y final

State 28:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_PODER * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         final shift-reduce 81     term1 ::= term1 TK_PODER final

State 29:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_DIV * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         final shift-reduce 80     term1 ::= term1 TK_DIV final

State 30:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_MULT * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 63     constant ::= TK_NUM
                         TK_ID shift        95     
                   TK_OPEN_PAR shift        16     
                       TK_CHAR shift-reduce 64     constant ::= TK_CHAR
                       KW_VERD shift-reduce 65     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 66     bool_const ::= KW_FALSO
                      constant shift-reduce 87     final ::= constant
                    bool_const shift-reduce 62     constant ::= bool_const
                      left_val shift-reduce 85     final ::= left_val
                  function_use shift-reduce 86     final ::= function_use
                         final shift-reduce 79     term1 ::= term1 TK_MULT final

State 31:
          start ::= global_decls * fp_decls block TK_EOF
          global_decls ::= global_decls * primitive id_list one_more_eol
          global_decls ::= global_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
          global_decls ::= global_decls * typedef one_more_eol
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= * KW_TIPO TK_ID KW_ES primitive
          typedef ::= * KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive
          fp_decls ::= * fp_decls KW_PROC TK_ID opt_arg_list one_more_eol variable_decls block
          fp_decls ::= * fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive one_more_eol variable_decls block
     (19) fp_decls ::= *

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                       KW_TIPO shift        102    
                     primitive shift        53     
                      fp_decls shift        52     
                       typedef shift        36     
                     {default} reduce       19     fp_decls ::=

State 32:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive one_more_eol variable_decls * block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol
          variable_decls ::= variable_decls * primitive id_list one_more_eol
          variable_decls ::= variable_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     KW_INICIO shift        74     
                     primitive shift        54     
                         block shift-reduce 18     fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive one_more_eol variable_decls block

State 33:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list one_more_eol variable_decls * block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol
          variable_decls ::= variable_decls * primitive id_list one_more_eol
          variable_decls ::= variable_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     KW_INICIO shift        74     
                     primitive shift        54     
                         block shift-reduce 17     fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list one_more_eol variable_decls block

State 34:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          opt_arg_list ::= TK_OPEN_PAR * arg_list TK_CLOSE_PAR
          arg_list ::= * primitive TK_ID args
     (23) arg_list ::= *

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     primitive shift        109    
                      arg_list shift        110    
                     {default} reduce       23     arg_list ::=

State 35:
          for_statement ::= KW_PARA * assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr

                         TK_ID shift        116    
                    assignment shift        120    
                      left_val shift        115    

State 36:
          global_decls ::= global_decls typedef * one_more_eol
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                  one_more_eol shift-reduce 3      global_decls ::= global_decls typedef one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 37:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list * one_more_eol
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                  one_more_eol shift-reduce 2      global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 38:
          global_decls ::= global_decls primitive id_list * one_more_eol
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                  one_more_eol shift-reduce 1      global_decls ::= global_decls primitive id_list one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 39:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive * one_more_eol variable_decls block
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                  one_more_eol shift        64     
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 40:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list * one_more_eol

                  one_more_eol shift-reduce 30     variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 41:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          variable_decls ::= variable_decls primitive id_list * one_more_eol

                  one_more_eol shift-reduce 29     variable_decls ::= variable_decls primitive id_list one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 42:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          do_while_until_statement ::= KW_REPITA * one_more_eol statement_list KW_HASTA expr

                  one_more_eol shift        67     
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 43:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          while_statement ::= KW_MIENTRAS expr KW_HAGA * one_more_eol statement_list KW_FIN KW_MIENTRAS

                  one_more_eol shift        68     
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 44:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          statement_list ::= statement_list statement * one_more_eol

                  one_more_eol shift-reduce 32     statement_list ::= statement_list statement one_more_eol
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 45:
          one_more_eol ::= * opt_eol TK_NEW_LINE
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list * one_more_eol variable_decls block
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                  one_more_eol shift        75     
                       opt_eol shift        131    
                     {default} reduce       28     opt_eol ::=

State 46:
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          if_statement ::= KW_SI expr * opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                       opt_eol shift        94     
                     {default} reduce       28     opt_eol ::=

State 47:
          expr_list ::= expr * exprs
          exprs ::= * exprs TK_COMMA expr
          exprs ::= * exprs TK_COMMA TK_STR_LIT
     (58) exprs ::= *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                         exprs shift        128    
                     {default} reduce       58     exprs ::=

State 48:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= KW_TIPO TK_ID KW_ES * primitive
          typedef ::= KW_TIPO TK_ID KW_ES * KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                    KW_ARREGLO shift        100    
                     primitive shift-reduce 12     typedef ::= KW_TIPO TK_ID KW_ES primitive

State 49:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE * primitive

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     primitive shift-reduce 13     typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

State 50:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON * primitive one_more_eol variable_decls block

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     primitive shift        39     

State 51:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          args ::= args TK_COMMA * primitive TK_ID

                     KW_ENTERO shift-reduce 9      primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 10     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 11     primitive ::= KW_CARACTER
                     primitive shift        107    

State 52:
          start ::= global_decls fp_decls * block TK_EOF
          fp_decls ::= fp_decls * KW_PROC TK_ID opt_arg_list one_more_eol variable_decls block
          fp_decls ::= fp_decls * KW_FUNC TK_ID opt_arg_list TK_COLON primitive one_more_eol variable_decls block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol

                       KW_PROC shift        132    
                       KW_FUNC shift        106    
                     KW_INICIO shift        74     
                         block shift        134    

State 53:
          global_decls ::= global_decls primitive * id_list one_more_eol
          global_decls ::= global_decls primitive * TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
          id_list ::= * TK_ID ids

                 TK_OPEN_BRACK shift        104    
                         TK_ID shift        66     
                       id_list shift        38     

State 54:
          id_list ::= * TK_ID ids
          variable_decls ::= variable_decls primitive * id_list one_more_eol
          variable_decls ::= variable_decls primitive * TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol

                 TK_OPEN_BRACK shift        112    
                         TK_ID shift        66     
                       id_list shift        41     

State 55:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK * num_list TK_CLOSE_BRACK KW_DE primitive
          num_list ::= * TK_NUM nums

                        TK_NUM shift        63     
                      num_list shift        99     

State 56:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK * id_list one_more_eol
          id_list ::= * TK_ID ids

                         TK_ID shift        66     
                       id_list shift        37     

State 57:
          fp_decls ::= fp_decls KW_FUNC TK_ID * opt_arg_list TK_COLON primitive one_more_eol variable_decls block
          opt_arg_list ::= * TK_OPEN_PAR arg_list TK_CLOSE_PAR
     (21) opt_arg_list ::= *

                   TK_OPEN_PAR shift        34     
                  opt_arg_list shift        105    
                     {default} reduce       21     opt_arg_list ::=

State 58:
          id_list ::= * TK_ID ids
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK * id_list one_more_eol

                         TK_ID shift        66     
                       id_list shift        40     

State 59:
          function_call ::= KW_LLAMAR TK_ID * opt_params
          opt_params ::= * TK_OPEN_PAR expr_list TK_CLOSE_PAR
     (52) opt_params ::= *

                   TK_OPEN_PAR shift        7      
                    opt_params shift-reduce 50     function_call ::= KW_LLAMAR TK_ID opt_params
                     {default} reduce       52     opt_params ::=

State 60:
          opt_params ::= * TK_OPEN_PAR expr_list TK_CLOSE_PAR
     (52) opt_params ::= *
          function_use ::= TK_ID TK_OPEN_PAR * opt_params TK_CLOSE_PAR

                   TK_OPEN_PAR shift        7      
                    opt_params shift        125    
                     {default} reduce       52     opt_params ::=

State 61:
          block ::= KW_INICIO opt_eol * statement_list KW_FIN opt_eol
          opt_eol ::= opt_eol * TK_NEW_LINE
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                statement_list shift        5      
                     {default} reduce       33     statement_list ::=

State 62:
          fp_decls ::= fp_decls KW_PROC TK_ID * opt_arg_list one_more_eol variable_decls block
          opt_arg_list ::= * TK_OPEN_PAR arg_list TK_CLOSE_PAR
     (21) opt_arg_list ::= *

                   TK_OPEN_PAR shift        34     
                  opt_arg_list shift        45     
                     {default} reduce       21     opt_arg_list ::=

State 63:
          num_list ::= TK_NUM * nums
          nums ::= * nums TK_COMMA TK_NUM
     (16) nums ::= *

                          nums shift        97     
                     {default} reduce       16     nums ::=

State 64:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive one_more_eol * variable_decls block
          variable_decls ::= * variable_decls primitive id_list one_more_eol
          variable_decls ::= * variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
     (31) variable_decls ::= *

                variable_decls shift        32     
                     {default} reduce       31     variable_decls ::=

State 65:
          arg_list ::= primitive TK_ID * args
          args ::= * args TK_COMMA primitive TK_ID
     (25) args ::= *

                          args shift        108    
                     {default} reduce       25     args ::=

State 66:
          id_list ::= TK_ID * ids
          ids ::= * ids TK_COMMA TK_ID
      (8) ids ::= *

                           ids shift        114    
                     {default} reduce       8      ids ::=

State 67:
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *
          do_while_until_statement ::= KW_REPITA one_more_eol * statement_list KW_HASTA expr

                statement_list shift        2      
                     {default} reduce       33     statement_list ::=

State 68:
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *
          while_statement ::= KW_MIENTRAS expr KW_HAGA one_more_eol * statement_list KW_FIN KW_MIENTRAS

                statement_list shift        3      
                     {default} reduce       33     statement_list ::=

State 69:
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *
          for_statement ::= KW_PARA assignment KW_HASTA expr KW_HAGA * statement_list KW_FIN KW_PARA

                statement_list shift        4      
                     {default} reduce       33     statement_list ::=

State 70:
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *
          else_statement ::= KW_SINO TK_NEW_LINE * statement_list

                statement_list shift        6      
                     {default} reduce       33     statement_list ::=

State 71:
          statement_list ::= * statement_list statement one_more_eol
     (33) statement_list ::= *
          if_statement ::= KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE * statement_list else_statement KW_FIN KW_SI

                statement_list shift        1      
                     {default} reduce       33     statement_list ::=

State 72:
          expr_list ::= TK_STR_LIT * exprs
          exprs ::= * exprs TK_COMMA expr
          exprs ::= * exprs TK_COMMA TK_STR_LIT
     (58) exprs ::= *

                         exprs shift        126    
                     {default} reduce       58     exprs ::=

State 73:
          block ::= KW_INICIO opt_eol statement_list KW_FIN * opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        129    
                     {default} reduce       28     opt_eol ::=

State 74:
          block ::= KW_INICIO * opt_eol statement_list KW_FIN opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        61     
                     {default} reduce       28     opt_eol ::=

State 75:
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list one_more_eol * variable_decls block
          variable_decls ::= * variable_decls primitive id_list one_more_eol
          variable_decls ::= * variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list one_more_eol
     (31) variable_decls ::= *

                variable_decls shift        33     
                     {default} reduce       31     variable_decls ::=

State 76:
          while_statement ::= KW_MIENTRAS expr * KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                       KW_HAGA shift        43     
                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     

State 77:
          for_statement ::= KW_PARA assignment KW_HASTA expr * KW_HAGA statement_list KW_FIN KW_PARA
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                       KW_HAGA shift        69     
                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     

State 78:
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0
          final ::= TK_OPEN_PAR expr * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 88     final ::= TK_OPEN_PAR expr TK_CLOSE_PAR
                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     

State 79:
          left_val ::= TK_ID TK_OPEN_BRACK expr * TK_CLOSE_BRACK
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                TK_CLOSE_BRACK shift-reduce 60     left_val ::= TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     

State 80:
     (68) return_statement ::= KW_RETORNE expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                     {default} reduce       68     return_statement ::= KW_RETORNE expr

State 81:
     (67) assignment ::= left_val TK_ARROW expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                     {default} reduce       67     assignment ::= left_val TK_ARROW expr

State 82:
     (49) do_while_until_statement ::= KW_REPITA one_more_eol statement_list KW_HASTA expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                     {default} reduce       49     do_while_until_statement ::= KW_REPITA one_more_eol statement_list KW_HASTA expr

State 83:
     (78) term0 ::= term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        30     
                        TK_DIV shift        29     
                      TK_PODER shift        28     
                          TK_Y shift        27     
                        TK_MOD shift        26     
                     {default} reduce       78     term0 ::= term1

State 84:
     (77) term0 ::= term0 TK_O term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        30     
                        TK_DIV shift        29     
                      TK_PODER shift        28     
                          TK_Y shift        27     
                        TK_MOD shift        26     
                     {default} reduce       77     term0 ::= term0 TK_O term1

State 85:
     (76) term0 ::= term0 TK_RESTA term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        30     
                        TK_DIV shift        29     
                      TK_PODER shift        28     
                          TK_Y shift        27     
                        TK_MOD shift        26     
                     {default} reduce       76     term0 ::= term0 TK_RESTA term1

State 86:
     (75) term0 ::= term0 TK_SUMA term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        30     
                        TK_DIV shift        29     
                      TK_PODER shift        28     
                          TK_Y shift        27     
                        TK_MOD shift        26     
                     {default} reduce       75     term0 ::= term0 TK_SUMA term1

State 87:
     (56) exprs ::= exprs TK_COMMA expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        22     
                    TK_MAYOR_Q shift        21     
                 TK_MAYOR_Q_IG shift        20     
                 TK_MENOR_Q_IG shift        19     
                    TK_IGUAL_Q shift        18     
                     {default} reduce       56     exprs ::= exprs TK_COMMA expr

State 88:
     (69) expr ::= expr TK_MENOR_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       69     expr ::= expr TK_MENOR_Q term0

State 89:
     (74) expr ::= term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       74     expr ::= term0

State 90:
     (73) expr ::= expr TK_IGUAL_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       73     expr ::= expr TK_IGUAL_Q term0

State 91:
     (72) expr ::= expr TK_MENOR_Q_IG term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       72     expr ::= expr TK_MENOR_Q_IG term0

State 92:
     (71) expr ::= expr TK_MAYOR_Q_IG term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       71     expr ::= expr TK_MAYOR_Q_IG term0

State 93:
     (70) expr ::= expr TK_MAYOR_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        25     
                      TK_RESTA shift        24     
                          TK_O shift        23     
                     {default} reduce       70     expr ::= expr TK_MAYOR_Q term0

State 94:
          opt_eol ::= opt_eol * TK_NEW_LINE
          if_statement ::= KW_SI expr opt_eol * KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                   KW_ENTONCES shift        124    

State 95:
     (59) left_val ::= TK_ID *
          left_val ::= TK_ID * TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= TK_ID * TK_OPEN_PAR opt_params TK_CLOSE_PAR

                 TK_OPEN_BRACK shift        17     
                   TK_OPEN_PAR shift        60     
                     {default} reduce       59     left_val ::= TK_ID

State 96:
          nums ::= nums TK_COMMA * TK_NUM

                        TK_NUM shift-reduce 15     nums ::= nums TK_COMMA TK_NUM

State 97:
     (14) num_list ::= TK_NUM nums *
          nums ::= nums * TK_COMMA TK_NUM

                      TK_COMMA shift        96     
                     {default} reduce       14     num_list ::= TK_NUM nums

State 98:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK * KW_DE primitive

                         KW_DE shift        49     

State 99:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list * TK_CLOSE_BRACK KW_DE primitive

                TK_CLOSE_BRACK shift        98     

State 100:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO * TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                 TK_OPEN_BRACK shift        55     

State 101:
          typedef ::= KW_TIPO TK_ID * KW_ES primitive
          typedef ::= KW_TIPO TK_ID * KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                         KW_ES shift        48     

State 102:
          typedef ::= KW_TIPO * TK_ID KW_ES primitive
          typedef ::= KW_TIPO * TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                         TK_ID shift        101    

State 103:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM * TK_CLOSE_BRACK id_list one_more_eol

                TK_CLOSE_BRACK shift        56     

State 104:
          global_decls ::= global_decls primitive TK_OPEN_BRACK * TK_NUM TK_CLOSE_BRACK id_list one_more_eol

                        TK_NUM shift        103    

State 105:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list * TK_COLON primitive one_more_eol variable_decls block

                      TK_COLON shift        50     

State 106:
          fp_decls ::= fp_decls KW_FUNC * TK_ID opt_arg_list TK_COLON primitive one_more_eol variable_decls block

                         TK_ID shift        57     

State 107:
          args ::= args TK_COMMA primitive * TK_ID

                         TK_ID shift-reduce 24     args ::= args TK_COMMA primitive TK_ID

State 108:
     (22) arg_list ::= primitive TK_ID args *
          args ::= args * TK_COMMA primitive TK_ID

                      TK_COMMA shift        51     
                     {default} reduce       22     arg_list ::= primitive TK_ID args

State 109:
          arg_list ::= primitive * TK_ID args

                         TK_ID shift        65     

State 110:
          opt_arg_list ::= TK_OPEN_PAR arg_list * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 20     opt_arg_list ::= TK_OPEN_PAR arg_list TK_CLOSE_PAR

State 111:
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM * TK_CLOSE_BRACK id_list one_more_eol

                TK_CLOSE_BRACK shift        58     

State 112:
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK * TK_NUM TK_CLOSE_BRACK id_list one_more_eol

                        TK_NUM shift        111    

State 113:
          ids ::= ids TK_COMMA * TK_ID

                         TK_ID shift-reduce 7      ids ::= ids TK_COMMA TK_ID

State 114:
      (6) id_list ::= TK_ID ids *
          ids ::= ids * TK_COMMA TK_ID

                      TK_COMMA shift        113    
                     {default} reduce       6      id_list ::= TK_ID ids

State 115:
          assignment ::= left_val * TK_ARROW expr

                      TK_ARROW shift        11     

State 116:
     (59) left_val ::= TK_ID *
          left_val ::= TK_ID * TK_OPEN_BRACK expr TK_CLOSE_BRACK

                 TK_OPEN_BRACK shift        17     
                     {default} reduce       59     left_val ::= TK_ID

State 117:
          function_call ::= KW_LLAMAR * TK_ID opt_params

                         TK_ID shift        59     

State 118:
          while_statement ::= KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN * KW_MIENTRAS

                   KW_MIENTRAS shift-reduce 48     while_statement ::= KW_MIENTRAS expr KW_HAGA one_more_eol statement_list KW_FIN KW_MIENTRAS

State 119:
          for_statement ::= KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN * KW_PARA

                       KW_PARA shift-reduce 47     for_statement ::= KW_PARA assignment KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA

State 120:
          for_statement ::= KW_PARA assignment * KW_HASTA expr KW_HAGA statement_list KW_FIN KW_PARA

                      KW_HASTA shift        14     

State 121:
          else_statement ::= KW_SINO * TK_NEW_LINE statement_list

                   TK_NEW_LINE shift        70     

State 122:
          if_statement ::= KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN * KW_SI

                         KW_SI shift-reduce 44     if_statement ::= KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI

State 123:
          if_statement ::= KW_SI expr opt_eol KW_ENTONCES TK_NEW_LINE statement_list else_statement * KW_FIN KW_SI

                        KW_FIN shift        122    

State 124:
          if_statement ::= KW_SI expr opt_eol KW_ENTONCES * TK_NEW_LINE statement_list else_statement KW_FIN KW_SI

                   TK_NEW_LINE shift        71     

State 125:
          function_use ::= TK_ID TK_OPEN_PAR opt_params * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 61     function_use ::= TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR

State 126:
     (54) expr_list ::= TK_STR_LIT exprs *
          exprs ::= exprs * TK_COMMA expr
          exprs ::= exprs * TK_COMMA TK_STR_LIT

                      TK_COMMA shift        9      
                     {default} reduce       54     expr_list ::= TK_STR_LIT exprs

State 127:
          opt_params ::= TK_OPEN_PAR expr_list * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 51     opt_params ::= TK_OPEN_PAR expr_list TK_CLOSE_PAR

State 128:
     (53) expr_list ::= expr exprs *
          exprs ::= exprs * TK_COMMA expr
          exprs ::= exprs * TK_COMMA TK_STR_LIT

                      TK_COMMA shift        9      
                     {default} reduce       53     expr_list ::= expr exprs

State 129:
     (26) block ::= KW_INICIO opt_eol statement_list KW_FIN opt_eol *
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       26     block ::= KW_INICIO opt_eol statement_list KW_FIN opt_eol

State 130:
      (5) one_more_eol ::= opt_eol TK_NEW_LINE *
     (27) opt_eol ::= opt_eol TK_NEW_LINE *

                   TK_NEW_LINE reduce       27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       5      one_more_eol ::= opt_eol TK_NEW_LINE

State 131:
          one_more_eol ::= opt_eol * TK_NEW_LINE
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift        130    

State 132:
          fp_decls ::= fp_decls KW_PROC * TK_ID opt_arg_list one_more_eol variable_decls block

                         TK_ID shift        62     

State 133:
      (0) start ::= global_decls fp_decls block TK_EOF *

                             $ reduce       0      start ::= global_decls fp_decls block TK_EOF

State 134:
          start ::= global_decls fp_decls block * TK_EOF

                        TK_EOF shift        133    

----------------------------------------------------
Symbols:
    0: $:
    1: TK_EOF
    2: TK_OPEN_BRACK
    3: TK_NUM
    4: TK_CLOSE_BRACK
    5: TK_NEW_LINE
    6: TK_ID
    7: TK_COMMA
    8: KW_ENTERO
    9: KW_BOOLEANO
   10: KW_CARACTER
   11: KW_TIPO
   12: KW_ES
   13: KW_ARREGLO
   14: KW_DE
   15: KW_PROC
   16: KW_FUNC
   17: TK_COLON
   18: TK_OPEN_PAR
   19: TK_CLOSE_PAR
   20: KW_INICIO
   21: KW_FIN
   22: KW_ESCRIBA
   23: KW_SI
   24: KW_ENTONCES
   25: KW_SINO
   26: KW_PARA
   27: KW_HASTA
   28: KW_HAGA
   29: KW_MIENTRAS
   30: KW_REPITA
   31: KW_LLAMAR
   32: TK_STR_LIT
   33: TK_CHAR
   34: KW_VERD
   35: KW_FALSO
   36: TK_ARROW
   37: KW_RETORNE
   38: TK_MENOR_Q
   39: TK_MAYOR_Q
   40: TK_MAYOR_Q_IG
   41: TK_MENOR_Q_IG
   42: TK_IGUAL_Q
   43: TK_SUMA
   44: TK_RESTA
   45: TK_O
   46: TK_MULT
   47: TK_DIV
   48: TK_PODER
   49: TK_Y
   50: TK_MOD
   51: error:
   52: ids: <lambda> TK_COMMA
   53: id_list: TK_ID
   54: primitive: KW_ENTERO KW_BOOLEANO KW_CARACTER
   55: num_list: TK_NUM
   56: nums: <lambda> TK_COMMA
   57: global_decls: <lambda> KW_ENTERO KW_BOOLEANO KW_CARACTER KW_TIPO
   58: fp_decls: <lambda> KW_PROC KW_FUNC
   59: block: KW_INICIO
   60: opt_arg_list: <lambda> TK_OPEN_PAR
   61: arg_list: <lambda> KW_ENTERO KW_BOOLEANO KW_CARACTER
   62: args: <lambda> TK_COMMA
   63: variable_decls: <lambda> KW_ENTERO KW_BOOLEANO KW_CARACTER
   64: statement_list: <lambda> TK_ID KW_ESCRIBA KW_SI KW_PARA KW_MIENTRAS KW_REPITA KW_LLAMAR KW_RETORNE
   65: opt_params: <lambda> TK_OPEN_PAR
   66: if_statement: KW_SI
   67: else_statement: <lambda> KW_SINO
   68: expr: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   69: statement: TK_ID KW_ESCRIBA KW_SI KW_PARA KW_MIENTRAS KW_REPITA KW_LLAMAR KW_RETORNE
   70: for_statement: KW_PARA
   71: function_call: KW_LLAMAR
   72: assignment: TK_ID
   73: return_statement: KW_RETORNE
   74: params:
   75: constant: TK_NUM TK_CHAR KW_VERD KW_FALSO
   76: bool_const: KW_VERD KW_FALSO
   77: left_val: TK_ID
   78: function_use: TK_ID
   79: term0: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   80: term1: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   81: final: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   82: typedef: KW_TIPO
   83: expr_list: <lambda> TK_NUM TK_ID TK_OPEN_PAR TK_STR_LIT TK_CHAR KW_VERD KW_FALSO
   84: exprs: <lambda> TK_COMMA
   85: languageStatements: KW_ESCRIBA
   86: printStatement: KW_ESCRIBA
   87: do_while_until_statement: KW_REPITA
   88: while_statement: KW_MIENTRAS
   89: start: KW_ENTERO KW_BOOLEANO KW_CARACTER KW_TIPO KW_PROC KW_FUNC KW_INICIO
   90: one_more_eol: TK_NEW_LINE
   91: opt_eol: <lambda> TK_NEW_LINE
