State 0:
          start ::= * global_decls fp_decls block TK_EOF
          global_decls ::= * global_decls primitive id_list TK_NEW_LINE opt_eol
          global_decls ::= * global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol
          global_decls ::= * global_decls typedef TK_NEW_LINE opt_eol
      (4) global_decls ::= *

                  global_decls shift        26     
                         start accept
                     {default} reduce       4      global_decls ::=

State 1:
          function_call ::= KW_LLAMAR TK_ID TK_OPEN_PAR * opt_params TK_CLOSE_PAR
          opt_params ::= * expr params
     (45) opt_params ::= *
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                    opt_params shift        106    
                          expr shift        31     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final
                     {default} reduce       45     opt_params ::=

State 2:
          opt_params ::= * expr params
     (45) opt_params ::= *
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          function_use ::= TK_ID TK_OPEN_PAR * opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                    opt_params shift        111    
                          expr shift        31     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final
                     {default} reduce       45     opt_params ::=

State 3:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          return_statement ::= KW_RETORNE * expr
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        66     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 4:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          assignment ::= left_val TK_ARROW * expr
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        67     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 5:
          params ::= params TK_COMMA * expr
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        68     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 6:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR
          final ::= TK_OPEN_PAR * expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        62     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 7:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          left_val ::= TK_ID TK_OPEN_BRACK * expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        63     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 8:
          for_statement ::= KW_PARA assignment KW_HASTA * expr KW_HAGA
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        64     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 9:
          statement_list ::= statement_list * statement TK_NEW_LINE opt_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * function_call
          statement ::= * assignment
          statement ::= * return_statement
          if_statement ::= * KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          if_statement ::= KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list * else_statement KW_FIN KW_SI
          else_statement ::= * KW_SINO statement_list
     (41) else_statement ::= *
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA
          function_call ::= * KW_LLAMAR TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        110    
                         KW_SI shift        10     
                       KW_SINO shift        56     
                       KW_PARA shift        30     
                     KW_LLAMAR shift        108    
                    KW_RETORNE shift        3      
                  if_statement shift-reduce 34     statement ::= if_statement
                else_statement shift        115    
                     statement shift        118    
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 36     statement ::= function_call
                    assignment shift-reduce 37     statement ::= assignment
              return_statement shift-reduce 38     statement ::= return_statement
                      left_val shift        109    
                     {default} reduce       41     else_statement ::=

State 10:
          if_statement ::= KW_SI * expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= * expr TK_MENOR_Q term0
          expr ::= * expr TK_MAYOR_Q term0
          expr ::= * expr TK_MAYOR_Q_IG term0
          expr ::= * expr TK_MENOR_Q_IG term0
          expr ::= * expr TK_IGUAL_Q term0
          expr ::= * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                          expr shift        65     
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        74     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 11:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_IGUAL_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        75     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 12:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MENOR_Q_IG * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        76     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 13:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MAYOR_Q_IG * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        77     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 14:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MAYOR_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        78     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 15:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          expr ::= expr TK_MENOR_Q * term0
          term0 ::= * term0 TK_SUMA term1
          term0 ::= * term0 TK_RESTA term1
          term0 ::= * term0 TK_O term1
          term0 ::= * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term0 shift        73     
                         term1 shift        69     
                         final shift-reduce 73     term1 ::= final

State 16:
          block ::= KW_INICIO opt_eol statement_list * KW_FIN opt_eol
          statement_list ::= statement_list * statement TK_NEW_LINE opt_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * function_call
          statement ::= * assignment
          statement ::= * return_statement
          if_statement ::= * KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA
          function_call ::= * KW_LLAMAR TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        110    
                        KW_FIN shift        59     
                         KW_SI shift        10     
                       KW_PARA shift        30     
                     KW_LLAMAR shift        108    
                    KW_RETORNE shift        3      
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        118    
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 36     statement ::= function_call
                    assignment shift-reduce 37     statement ::= assignment
              return_statement shift-reduce 38     statement ::= return_statement
                      left_val shift        109    

State 17:
          statement_list ::= statement_list * statement TK_NEW_LINE opt_eol
          statement ::= * if_statement
          statement ::= * for_statement
          statement ::= * function_call
          statement ::= * assignment
          statement ::= * return_statement
          if_statement ::= * KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
     (40) else_statement ::= KW_SINO statement_list *
          for_statement ::= * KW_PARA assignment KW_HASTA expr KW_HAGA
          function_call ::= * KW_LLAMAR TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr
          return_statement ::= * KW_RETORNE expr

                         TK_ID shift        110    
                         KW_SI shift        10     
                       KW_PARA shift        30     
                     KW_LLAMAR shift        108    
                    KW_RETORNE shift        3      
                  if_statement shift-reduce 34     statement ::= if_statement
                     statement shift        118    
                 for_statement shift-reduce 35     statement ::= for_statement
                 function_call shift-reduce 36     statement ::= function_call
                    assignment shift-reduce 37     statement ::= assignment
              return_statement shift-reduce 38     statement ::= return_statement
                      left_val shift        109    
                     {default} reduce       40     else_statement ::= KW_SINO statement_list

State 18:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_O * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term1 shift        70     
                         final shift-reduce 73     term1 ::= final

State 19:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_RESTA * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term1 shift        71     
                         final shift-reduce 73     term1 ::= final

State 20:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term0 ::= term0 TK_SUMA * term1
          term1 ::= * term1 TK_MULT final
          term1 ::= * term1 TK_DIV final
          term1 ::= * term1 TK_PODER final
          term1 ::= * term1 TK_Y final
          term1 ::= * term1 TK_MOD final
          term1 ::= * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         term1 shift        72     
                         final shift-reduce 73     term1 ::= final

State 21:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_MOD * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         final shift-reduce 72     term1 ::= term1 TK_MOD final

State 22:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_Y * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         final shift-reduce 71     term1 ::= term1 TK_Y final

State 23:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_PODER * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         final shift-reduce 70     term1 ::= term1 TK_PODER final

State 24:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_DIV * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         final shift-reduce 69     term1 ::= term1 TK_DIV final

State 25:
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR
          constant ::= * bool_const
          constant ::= * TK_NUM
          constant ::= * TK_CHAR
          bool_const ::= * KW_VERD
          bool_const ::= * KW_FALSO
          term1 ::= term1 TK_MULT * final
          final ::= * left_val
          final ::= * function_use
          final ::= * constant
          final ::= * TK_OPEN_PAR expr TK_CLOSE_PAR

                        TK_NUM shift-reduce 52     constant ::= TK_NUM
                         TK_ID shift        79     
                   TK_OPEN_PAR shift        6      
                       TK_CHAR shift-reduce 53     constant ::= TK_CHAR
                       KW_VERD shift-reduce 54     bool_const ::= KW_VERD
                      KW_FALSO shift-reduce 55     bool_const ::= KW_FALSO
                      constant shift-reduce 76     final ::= constant
                    bool_const shift-reduce 51     constant ::= bool_const
                      left_val shift-reduce 74     final ::= left_val
                  function_use shift-reduce 75     final ::= function_use
                         final shift-reduce 68     term1 ::= term1 TK_MULT final

State 26:
          start ::= global_decls * fp_decls block TK_EOF
          global_decls ::= global_decls * primitive id_list TK_NEW_LINE opt_eol
          global_decls ::= global_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol
          global_decls ::= global_decls * typedef TK_NEW_LINE opt_eol
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= * KW_TIPO TK_ID KW_ES primitive
          typedef ::= * KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive
          fp_decls ::= * fp_decls KW_PROC TK_ID opt_arg_list TK_NEW_LINE opt_eol variable_decls block
          fp_decls ::= * fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block
     (20) fp_decls ::= *

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                       KW_TIPO shift        86     
                     primitive shift        37     
                      fp_decls shift        36     
                       typedef shift        88     
                     {default} reduce       20     fp_decls ::=

State 27:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls * block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol
          variable_decls ::= variable_decls * primitive id_list eol
          variable_decls ::= variable_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     KW_INICIO shift        60     
                     primitive shift        40     
                         block shift-reduce 19     fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block

State 28:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list TK_NEW_LINE opt_eol variable_decls * block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol
          variable_decls ::= variable_decls * primitive id_list eol
          variable_decls ::= variable_decls * primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     KW_INICIO shift        60     
                     primitive shift        40     
                         block shift-reduce 18     fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list TK_NEW_LINE opt_eol variable_decls block

State 29:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          opt_arg_list ::= TK_OPEN_PAR * arg_list TK_CLOSE_PAR
          arg_list ::= * primitive TK_ID args

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     primitive shift        100    
                      arg_list shift        101    

State 30:
          for_statement ::= KW_PARA * assignment KW_HASTA expr KW_HAGA
          left_val ::= * TK_ID
          left_val ::= * TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
          assignment ::= * left_val TK_ARROW expr

                         TK_ID shift        110    
                    assignment shift        113    
                      left_val shift        109    

State 31:
          opt_params ::= expr * params
          params ::= * params TK_COMMA expr
     (47) params ::= *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     
                        params shift        112    
                     {default} reduce       47     params ::=

State 32:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= KW_TIPO TK_ID KW_ES * primitive
          typedef ::= KW_TIPO TK_ID KW_ES * KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                    KW_ARREGLO shift        84     
                     primitive shift-reduce 13     typedef ::= KW_TIPO TK_ID KW_ES primitive

State 33:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE * primitive

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     primitive shift-reduce 14     typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

State 34:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON * primitive TK_NEW_LINE opt_eol variable_decls block

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     primitive shift        95     

State 35:
          primitive ::= * KW_ENTERO
          primitive ::= * KW_BOOLEANO
          primitive ::= * KW_CARACTER
          args ::= args TK_COMMA * primitive TK_ID

                     KW_ENTERO shift-reduce 10     primitive ::= KW_ENTERO
                   KW_BOOLEANO shift-reduce 11     primitive ::= KW_BOOLEANO
                   KW_CARACTER shift-reduce 12     primitive ::= KW_CARACTER
                     primitive shift        98     

State 36:
          start ::= global_decls fp_decls * block TK_EOF
          fp_decls ::= fp_decls * KW_PROC TK_ID opt_arg_list TK_NEW_LINE opt_eol variable_decls block
          fp_decls ::= fp_decls * KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block
          block ::= * KW_INICIO opt_eol statement_list KW_FIN opt_eol

                       KW_PROC shift        121    
                       KW_FUNC shift        97     
                     KW_INICIO shift        60     
                         block shift        123    

State 37:
          global_decls ::= global_decls primitive * id_list TK_NEW_LINE opt_eol
          global_decls ::= global_decls primitive * TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol
          id_list ::= * TK_ID ids

                 TK_OPEN_BRACK shift        92     
                         TK_ID shift        55     
                       id_list shift        94     

State 38:
          eol ::= * TK_NEW_LINE
          eol ::= * TK_EOF
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list * eol

                        TK_EOF shift-reduce 6      eol ::= TK_EOF
                   TK_NEW_LINE shift-reduce 5      eol ::= TK_NEW_LINE
                           eol shift-reduce 30     variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol

State 39:
          eol ::= * TK_NEW_LINE
          eol ::= * TK_EOF
          variable_decls ::= variable_decls primitive id_list * eol

                        TK_EOF shift-reduce 6      eol ::= TK_EOF
                   TK_NEW_LINE shift-reduce 5      eol ::= TK_NEW_LINE
                           eol shift-reduce 29     variable_decls ::= variable_decls primitive id_list eol

State 40:
          id_list ::= * TK_ID ids
          variable_decls ::= variable_decls primitive * id_list eol
          variable_decls ::= variable_decls primitive * TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol

                 TK_OPEN_BRACK shift        103    
                         TK_ID shift        55     
                       id_list shift        39     

State 41:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK * num_list TK_CLOSE_BRACK KW_DE primitive
          num_list ::= * TK_NUM nums

                        TK_NUM shift        49     
                      num_list shift        83     

State 42:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK * id_list TK_NEW_LINE opt_eol
          id_list ::= * TK_ID ids

                         TK_ID shift        55     
                       id_list shift        90     

State 43:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol * variable_decls block
          opt_eol ::= opt_eol * TK_NEW_LINE
          variable_decls ::= * variable_decls primitive id_list eol
          variable_decls ::= * variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol
     (31) variable_decls ::= *

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                variable_decls shift        27     
                     {default} reduce       31     variable_decls ::=

State 44:
          fp_decls ::= fp_decls KW_FUNC TK_ID * opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block
          opt_arg_list ::= * TK_OPEN_PAR arg_list TK_CLOSE_PAR
     (22) opt_arg_list ::= *

                   TK_OPEN_PAR shift        29     
                  opt_arg_list shift        96     
                     {default} reduce       22     opt_arg_list ::=

State 45:
          id_list ::= * TK_ID ids
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK * id_list eol

                         TK_ID shift        55     
                       id_list shift        38     

State 46:
          block ::= KW_INICIO opt_eol * statement_list KW_FIN opt_eol
          opt_eol ::= opt_eol * TK_NEW_LINE
          statement_list ::= * statement_list statement TK_NEW_LINE opt_eol
     (33) statement_list ::= *

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                statement_list shift        16     
                     {default} reduce       33     statement_list ::=

State 47:
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list TK_NEW_LINE opt_eol * variable_decls block
          opt_eol ::= opt_eol * TK_NEW_LINE
          variable_decls ::= * variable_decls primitive id_list eol
          variable_decls ::= * variable_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list eol
     (31) variable_decls ::= *

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                variable_decls shift        28     
                     {default} reduce       31     variable_decls ::=

State 48:
          fp_decls ::= fp_decls KW_PROC TK_ID * opt_arg_list TK_NEW_LINE opt_eol variable_decls block
          opt_arg_list ::= * TK_OPEN_PAR arg_list TK_CLOSE_PAR
     (22) opt_arg_list ::= *

                   TK_OPEN_PAR shift        29     
                  opt_arg_list shift        120    
                     {default} reduce       22     opt_arg_list ::=

State 49:
          num_list ::= TK_NUM * nums
          nums ::= * nums TK_COMMA TK_NUM
     (17) nums ::= *

                          nums shift        81     
                     {default} reduce       17     nums ::=

State 50:
          global_decls ::= global_decls typedef TK_NEW_LINE * opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        87     
                     {default} reduce       28     opt_eol ::=

State 51:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE * opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        89     
                     {default} reduce       28     opt_eol ::=

State 52:
          global_decls ::= global_decls primitive id_list TK_NEW_LINE * opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        93     
                     {default} reduce       28     opt_eol ::=

State 53:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE * opt_eol variable_decls block
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        43     
                     {default} reduce       28     opt_eol ::=

State 54:
          arg_list ::= primitive TK_ID * args
          args ::= * args TK_COMMA primitive TK_ID
     (25) args ::= *

                          args shift        99     
                     {default} reduce       25     args ::=

State 55:
          id_list ::= TK_ID * ids
          ids ::= * ids TK_COMMA TK_ID
      (9) ids ::= *

                           ids shift        105    
                     {default} reduce       9      ids ::=

State 56:
          statement_list ::= * statement_list statement TK_NEW_LINE opt_eol
     (33) statement_list ::= *
          else_statement ::= KW_SINO * statement_list

                statement_list shift        17     
                     {default} reduce       33     statement_list ::=

State 57:
          statement_list ::= * statement_list statement TK_NEW_LINE opt_eol
     (33) statement_list ::= *
          if_statement ::= KW_SI expr KW_ENTONCES TK_NEW_LINE * statement_list else_statement KW_FIN KW_SI

                statement_list shift        9      
                     {default} reduce       33     statement_list ::=

State 58:
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *
          statement_list ::= statement_list statement TK_NEW_LINE * opt_eol

                       opt_eol shift        117    
                     {default} reduce       28     opt_eol ::=

State 59:
          block ::= KW_INICIO opt_eol statement_list KW_FIN * opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        119    
                     {default} reduce       28     opt_eol ::=

State 60:
          block ::= KW_INICIO * opt_eol statement_list KW_FIN opt_eol
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        46     
                     {default} reduce       28     opt_eol ::=

State 61:
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list TK_NEW_LINE * opt_eol variable_decls block
          opt_eol ::= * opt_eol TK_NEW_LINE
     (28) opt_eol ::= *

                       opt_eol shift        47     
                     {default} reduce       28     opt_eol ::=

State 62:
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0
          final ::= TK_OPEN_PAR expr * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 77     final ::= TK_OPEN_PAR expr TK_CLOSE_PAR
                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     

State 63:
          left_val ::= TK_ID TK_OPEN_BRACK expr * TK_CLOSE_BRACK
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                TK_CLOSE_BRACK shift-reduce 49     left_val ::= TK_ID TK_OPEN_BRACK expr TK_CLOSE_BRACK
                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     

State 64:
          for_statement ::= KW_PARA assignment KW_HASTA expr * KW_HAGA
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                       KW_HAGA shift-reduce 42     for_statement ::= KW_PARA assignment KW_HASTA expr KW_HAGA
                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     

State 65:
          if_statement ::= KW_SI expr * KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                   KW_ENTONCES shift        116    
                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     

State 66:
     (57) return_statement ::= KW_RETORNE expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     
                     {default} reduce       57     return_statement ::= KW_RETORNE expr

State 67:
     (56) assignment ::= left_val TK_ARROW expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     
                     {default} reduce       56     assignment ::= left_val TK_ARROW expr

State 68:
     (46) params ::= params TK_COMMA expr *
          expr ::= expr * TK_MENOR_Q term0
          expr ::= expr * TK_MAYOR_Q term0
          expr ::= expr * TK_MAYOR_Q_IG term0
          expr ::= expr * TK_MENOR_Q_IG term0
          expr ::= expr * TK_IGUAL_Q term0

                    TK_MENOR_Q shift        15     
                    TK_MAYOR_Q shift        14     
                 TK_MAYOR_Q_IG shift        13     
                 TK_MENOR_Q_IG shift        12     
                    TK_IGUAL_Q shift        11     
                     {default} reduce       46     params ::= params TK_COMMA expr

State 69:
     (67) term0 ::= term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        25     
                        TK_DIV shift        24     
                      TK_PODER shift        23     
                          TK_Y shift        22     
                        TK_MOD shift        21     
                     {default} reduce       67     term0 ::= term1

State 70:
     (66) term0 ::= term0 TK_O term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        25     
                        TK_DIV shift        24     
                      TK_PODER shift        23     
                          TK_Y shift        22     
                        TK_MOD shift        21     
                     {default} reduce       66     term0 ::= term0 TK_O term1

State 71:
     (65) term0 ::= term0 TK_RESTA term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        25     
                        TK_DIV shift        24     
                      TK_PODER shift        23     
                          TK_Y shift        22     
                        TK_MOD shift        21     
                     {default} reduce       65     term0 ::= term0 TK_RESTA term1

State 72:
     (64) term0 ::= term0 TK_SUMA term1 *
          term1 ::= term1 * TK_MULT final
          term1 ::= term1 * TK_DIV final
          term1 ::= term1 * TK_PODER final
          term1 ::= term1 * TK_Y final
          term1 ::= term1 * TK_MOD final

                       TK_MULT shift        25     
                        TK_DIV shift        24     
                      TK_PODER shift        23     
                          TK_Y shift        22     
                        TK_MOD shift        21     
                     {default} reduce       64     term0 ::= term0 TK_SUMA term1

State 73:
     (58) expr ::= expr TK_MENOR_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       58     expr ::= expr TK_MENOR_Q term0

State 74:
     (63) expr ::= term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       63     expr ::= term0

State 75:
     (62) expr ::= expr TK_IGUAL_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       62     expr ::= expr TK_IGUAL_Q term0

State 76:
     (61) expr ::= expr TK_MENOR_Q_IG term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       61     expr ::= expr TK_MENOR_Q_IG term0

State 77:
     (60) expr ::= expr TK_MAYOR_Q_IG term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       60     expr ::= expr TK_MAYOR_Q_IG term0

State 78:
     (59) expr ::= expr TK_MAYOR_Q term0 *
          term0 ::= term0 * TK_SUMA term1
          term0 ::= term0 * TK_RESTA term1
          term0 ::= term0 * TK_O term1

                       TK_SUMA shift        20     
                      TK_RESTA shift        19     
                          TK_O shift        18     
                     {default} reduce       59     expr ::= expr TK_MAYOR_Q term0

State 79:
     (48) left_val ::= TK_ID *
          left_val ::= TK_ID * TK_OPEN_BRACK expr TK_CLOSE_BRACK
          function_use ::= TK_ID * TK_OPEN_PAR opt_params TK_CLOSE_PAR

                 TK_OPEN_BRACK shift        7      
                   TK_OPEN_PAR shift        2      
                     {default} reduce       48     left_val ::= TK_ID

State 80:
          nums ::= nums TK_COMMA * TK_NUM

                        TK_NUM shift-reduce 16     nums ::= nums TK_COMMA TK_NUM

State 81:
     (15) num_list ::= TK_NUM nums *
          nums ::= nums * TK_COMMA TK_NUM

                      TK_COMMA shift        80     
                     {default} reduce       15     num_list ::= TK_NUM nums

State 82:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK * KW_DE primitive

                         KW_DE shift        33     

State 83:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list * TK_CLOSE_BRACK KW_DE primitive

                TK_CLOSE_BRACK shift        82     

State 84:
          typedef ::= KW_TIPO TK_ID KW_ES KW_ARREGLO * TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                 TK_OPEN_BRACK shift        41     

State 85:
          typedef ::= KW_TIPO TK_ID * KW_ES primitive
          typedef ::= KW_TIPO TK_ID * KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                         KW_ES shift        32     

State 86:
          typedef ::= KW_TIPO * TK_ID KW_ES primitive
          typedef ::= KW_TIPO * TK_ID KW_ES KW_ARREGLO TK_OPEN_BRACK num_list TK_CLOSE_BRACK KW_DE primitive

                         TK_ID shift        85     

State 87:
      (3) global_decls ::= global_decls typedef TK_NEW_LINE opt_eol *
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       3      global_decls ::= global_decls typedef TK_NEW_LINE opt_eol

State 88:
          global_decls ::= global_decls typedef * TK_NEW_LINE opt_eol

                   TK_NEW_LINE shift        50     

State 89:
      (2) global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol *
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       2      global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol

State 90:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM TK_CLOSE_BRACK id_list * TK_NEW_LINE opt_eol

                   TK_NEW_LINE shift        51     

State 91:
          global_decls ::= global_decls primitive TK_OPEN_BRACK TK_NUM * TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol

                TK_CLOSE_BRACK shift        42     

State 92:
          global_decls ::= global_decls primitive TK_OPEN_BRACK * TK_NUM TK_CLOSE_BRACK id_list TK_NEW_LINE opt_eol

                        TK_NUM shift        91     

State 93:
      (1) global_decls ::= global_decls primitive id_list TK_NEW_LINE opt_eol *
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       1      global_decls ::= global_decls primitive id_list TK_NEW_LINE opt_eol

State 94:
          global_decls ::= global_decls primitive id_list * TK_NEW_LINE opt_eol

                   TK_NEW_LINE shift        52     

State 95:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list TK_COLON primitive * TK_NEW_LINE opt_eol variable_decls block

                   TK_NEW_LINE shift        53     

State 96:
          fp_decls ::= fp_decls KW_FUNC TK_ID opt_arg_list * TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block

                      TK_COLON shift        34     

State 97:
          fp_decls ::= fp_decls KW_FUNC * TK_ID opt_arg_list TK_COLON primitive TK_NEW_LINE opt_eol variable_decls block

                         TK_ID shift        44     

State 98:
          args ::= args TK_COMMA primitive * TK_ID

                         TK_ID shift-reduce 24     args ::= args TK_COMMA primitive TK_ID

State 99:
     (23) arg_list ::= primitive TK_ID args *
          args ::= args * TK_COMMA primitive TK_ID

                      TK_COMMA shift        35     
                     {default} reduce       23     arg_list ::= primitive TK_ID args

State 100:
          arg_list ::= primitive * TK_ID args

                         TK_ID shift        54     

State 101:
          opt_arg_list ::= TK_OPEN_PAR arg_list * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 21     opt_arg_list ::= TK_OPEN_PAR arg_list TK_CLOSE_PAR

State 102:
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK TK_NUM * TK_CLOSE_BRACK id_list eol

                TK_CLOSE_BRACK shift        45     

State 103:
          variable_decls ::= variable_decls primitive TK_OPEN_BRACK * TK_NUM TK_CLOSE_BRACK id_list eol

                        TK_NUM shift        102    

State 104:
          ids ::= ids TK_COMMA * TK_ID

                         TK_ID shift-reduce 8      ids ::= ids TK_COMMA TK_ID

State 105:
      (7) id_list ::= TK_ID ids *
          ids ::= ids * TK_COMMA TK_ID

                      TK_COMMA shift        104    
                     {default} reduce       7      id_list ::= TK_ID ids

State 106:
          function_call ::= KW_LLAMAR TK_ID TK_OPEN_PAR opt_params * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 43     function_call ::= KW_LLAMAR TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR

State 107:
          function_call ::= KW_LLAMAR TK_ID * TK_OPEN_PAR opt_params TK_CLOSE_PAR

                   TK_OPEN_PAR shift        1      

State 108:
          function_call ::= KW_LLAMAR * TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR

                         TK_ID shift        107    

State 109:
          assignment ::= left_val * TK_ARROW expr

                      TK_ARROW shift        4      

State 110:
     (48) left_val ::= TK_ID *
          left_val ::= TK_ID * TK_OPEN_BRACK expr TK_CLOSE_BRACK

                 TK_OPEN_BRACK shift        7      
                     {default} reduce       48     left_val ::= TK_ID

State 111:
          function_use ::= TK_ID TK_OPEN_PAR opt_params * TK_CLOSE_PAR

                  TK_CLOSE_PAR shift-reduce 50     function_use ::= TK_ID TK_OPEN_PAR opt_params TK_CLOSE_PAR

State 112:
     (44) opt_params ::= expr params *
          params ::= params * TK_COMMA expr

                      TK_COMMA shift        5      
                     {default} reduce       44     opt_params ::= expr params

State 113:
          for_statement ::= KW_PARA assignment * KW_HASTA expr KW_HAGA

                      KW_HASTA shift        8      

State 114:
          if_statement ::= KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN * KW_SI

                         KW_SI shift-reduce 39     if_statement ::= KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement KW_FIN KW_SI

State 115:
          if_statement ::= KW_SI expr KW_ENTONCES TK_NEW_LINE statement_list else_statement * KW_FIN KW_SI

                        KW_FIN shift        114    

State 116:
          if_statement ::= KW_SI expr KW_ENTONCES * TK_NEW_LINE statement_list else_statement KW_FIN KW_SI

                   TK_NEW_LINE shift        57     

State 117:
          opt_eol ::= opt_eol * TK_NEW_LINE
     (32) statement_list ::= statement_list statement TK_NEW_LINE opt_eol *

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       32     statement_list ::= statement_list statement TK_NEW_LINE opt_eol

State 118:
          statement_list ::= statement_list statement * TK_NEW_LINE opt_eol

                   TK_NEW_LINE shift        58     

State 119:
     (26) block ::= KW_INICIO opt_eol statement_list KW_FIN opt_eol *
          opt_eol ::= opt_eol * TK_NEW_LINE

                   TK_NEW_LINE shift-reduce 27     opt_eol ::= opt_eol TK_NEW_LINE
                     {default} reduce       26     block ::= KW_INICIO opt_eol statement_list KW_FIN opt_eol

State 120:
          fp_decls ::= fp_decls KW_PROC TK_ID opt_arg_list * TK_NEW_LINE opt_eol variable_decls block

                   TK_NEW_LINE shift        61     

State 121:
          fp_decls ::= fp_decls KW_PROC * TK_ID opt_arg_list TK_NEW_LINE opt_eol variable_decls block

                         TK_ID shift        48     

State 122:
      (0) start ::= global_decls fp_decls block TK_EOF *

                             $ reduce       0      start ::= global_decls fp_decls block TK_EOF

State 123:
          start ::= global_decls fp_decls block * TK_EOF

                        TK_EOF shift        122    

----------------------------------------------------
Symbols:
    0: $:
    1: TK_EOF
    2: TK_NEW_LINE
    3: TK_OPEN_BRACK
    4: TK_NUM
    5: TK_CLOSE_BRACK
    6: TK_ID
    7: TK_COMMA
    8: KW_ENTERO
    9: KW_BOOLEANO
   10: KW_CARACTER
   11: KW_TIPO
   12: KW_ES
   13: KW_ARREGLO
   14: KW_DE
   15: KW_PROC
   16: KW_FUNC
   17: TK_COLON
   18: TK_OPEN_PAR
   19: TK_CLOSE_PAR
   20: KW_INICIO
   21: KW_FIN
   22: KW_SI
   23: KW_ENTONCES
   24: KW_SINO
   25: KW_PARA
   26: KW_HASTA
   27: KW_HAGA
   28: KW_LLAMAR
   29: TK_CHAR
   30: KW_VERD
   31: KW_FALSO
   32: TK_ARROW
   33: KW_RETORNE
   34: TK_MENOR_Q
   35: TK_MAYOR_Q
   36: TK_MAYOR_Q_IG
   37: TK_MENOR_Q_IG
   38: TK_IGUAL_Q
   39: TK_SUMA
   40: TK_RESTA
   41: TK_O
   42: TK_MULT
   43: TK_DIV
   44: TK_PODER
   45: TK_Y
   46: TK_MOD
   47: error:
   48: ids: <lambda> TK_COMMA
   49: id_list: TK_ID
   50: primitive: KW_ENTERO KW_BOOLEANO KW_CARACTER
   51: num_list: TK_NUM
   52: nums: <lambda> TK_COMMA
   53: global_decls: <lambda> KW_ENTERO KW_BOOLEANO KW_CARACTER KW_TIPO
   54: fp_decls: <lambda> KW_PROC KW_FUNC
   55: block: KW_INICIO
   56: opt_arg_list: <lambda> TK_OPEN_PAR
   57: arg_list: KW_ENTERO KW_BOOLEANO KW_CARACTER
   58: args: <lambda> TK_COMMA
   59: variable_decls: <lambda> KW_ENTERO KW_BOOLEANO KW_CARACTER
   60: statement_list: <lambda> TK_ID KW_SI KW_PARA KW_LLAMAR KW_RETORNE
   61: opt_params: <lambda> TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   62: if_statement: KW_SI
   63: else_statement: <lambda> KW_SINO
   64: expr: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   65: statement: TK_ID KW_SI KW_PARA KW_LLAMAR KW_RETORNE
   66: for_statement: KW_PARA
   67: function_call: KW_LLAMAR
   68: assignment: TK_ID
   69: return_statement: KW_RETORNE
   70: params: <lambda> TK_COMMA
   71: constant: TK_NUM TK_CHAR KW_VERD KW_FALSO
   72: bool_const: KW_VERD KW_FALSO
   73: left_val: TK_ID
   74: function_use: TK_ID
   75: term0: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   76: term1: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   77: final: TK_NUM TK_ID TK_OPEN_PAR TK_CHAR KW_VERD KW_FALSO
   78: typedef: KW_TIPO
   79: start: KW_ENTERO KW_BOOLEANO KW_CARACTER KW_TIPO KW_PROC KW_FUNC KW_INICIO
   80: opt_eol: <lambda> TK_NEW_LINE
   81: eol: TK_EOF TK_NEW_LINE
